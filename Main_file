Search the column "DOI link" and finish "reference" column

Requirements
Python installed on your computer.
Install the requests library to handle API calls and the pandas library to handle Excel files.
pip install requests pandas
Steps
The script will:

Load the Excel file and read the DOIs from the "DOI" column.
Query the CrossRef API to retrieve metadata based on each DOI.
Format the metadata into Harvard citation style.
Save the updated data to a new Excel file.
Python Script
import pandas as pd
import requests
import time

# Load the Excel file
file_path = 'your_file_path.xlsx'  # Replace with the path to your Excel file
output_file_path = 'updated_references.xlsx'  # Output file path
df = pd.read_excel(file_path)

# Define a function to get citation information from CrossRef
def get_harvard_citation(doi):
    url = f"https://api.crossref.org/works/{doi}"
    try:
        response = requests.get(url)
        if response.status_code == 200:
            data = response.json()
            item = data['message']
            
            # Construct Harvard style citation
            authors = ', '.join([f"{author['family']}, {author['given'][0]}." for author in item['author']])
            year = item.get('published-print', item.get('published-online', {'date-parts': [[None]]}))['date-parts'][0][0]
            title = item['title'][0]
            journal = item['container-title'][0] if 'container-title' in item else ''
            volume = item.get('volume', '')
            issue = item.get('issue', '')
            pages = item.get('page', '')
            doi = item.get('DOI', '')

            citation = f"{authors} ({year}) '{title}', *{journal}*, vol. {volume}, no. {issue}, pp. {pages}. doi:{doi}"
            return citation
        else:
            print(f"Failed to retrieve data for DOI {doi}")
            return None
    except Exception as e:
        print(f"Error fetching data for DOI {doi}: {e}")
        return None

# Apply the function to each DOI and store the results in the "Reference" column
df['Reference'] = df['DOI'].apply(lambda doi: get_harvard_citation(doi) if pd.notna(doi) else None)

# Save the updated dataframe to a new Excel file
df.to_excel(output_file_path, index=False)
print(f"Updated references saved to {output_file_path}")
Instructions to Run
Replace "your_file_path.xlsx" in file_path with the path to your Excel file.
Run this script in your Python environment. It will create a new file, updated_references.xlsx, with the "Reference" column populated in Harvard format.
Notes
The script includes a small delay between requests to avoid overwhelming the CrossRef API.
Check the results as variations in article metadata may lead to minor formatting inconsistencies.
